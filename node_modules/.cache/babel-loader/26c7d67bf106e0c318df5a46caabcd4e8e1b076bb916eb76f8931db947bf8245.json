{"ast":null,"code":"import axios from 'axios';\n\n// Crear una instancia de axios\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080'\n});\n\n// Agregar un interceptor para todas las peticiones\naxiosInstance.interceptors.request.use(config => {\n  const username = localStorage.getItem('username');\n  if (username) {\n    config.headers['X-Username'] = username;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","username","localStorage","getItem","headers","error","Promise","reject"],"sources":["/Users/matigasstron/Desktop/pagina VG/frontend/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\n// Crear una instancia de axios\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080'\n});\n\n// Agregar un interceptor para todas las peticiones\naxiosInstance.interceptors.request.use(\n  config => {\n    const username = localStorage.getItem('username');\n    if (username) {\n      config.headers['X-Username'] = username;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACpCC,MAAM,IAAI;EACR,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,IAAIF,QAAQ,EAAE;IACZD,MAAM,CAACI,OAAO,CAAC,YAAY,CAAC,GAAGH,QAAQ;EACzC;EACA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}